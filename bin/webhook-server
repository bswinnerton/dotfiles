#!/usr/bin/env ruby

require 'pry'
require 'json'
require 'sinatra'

set :bind, '0.0.0.0'

[:get, :post, :put, :patch, :delete].each do |method|
  send(method, '*') do
    begin
      body = request.body.read

      parsed_headers = request.env.each_with_object({}) do |(key, value), hash|
        if key.start_with?('HTTP_')
          hash[key.gsub('HTTP_', '')] = value
        end
      end

      formatted_body = parse_if_json(body)

      parsed_headers.each do |key, value|
        name = humanize(key)

        case name
        when 'Version'
          puts purple(value).strip
        else
          puts purple("#{name}: #{value}").strip
        end
      end

      puts "#{cyan(formatted_body)}\n\n"

      if body.empty?
        status 200
        <<~HTML
          <html>
            <head>
              <meta charset="UTF-8">
            </head>
            <body>
              <p style="font-size:50px;text-align:center;margin-top:100px;">
                ðŸ‘‹
              </p>
            </body>
          </html>
        HTML
      else
        status 204
      end
    rescue => exception
      binding.pry
    end
  end
end

def humanize(string)
  pieces = string.split(/_|-/)
  pieces.map { |piece| piece.capitalize }.join('-')
end

def parse_if_json(text)
  raw_json = JSON.parse(text)
  JSON.pretty_generate(raw_json)
rescue JSON::ParserError => exception
  text
end

def purple(text)
  "\n\e[35m#{text}\e[0m"
end

def cyan(text)
  "\n\e[36m#{text}\e[0m"
end

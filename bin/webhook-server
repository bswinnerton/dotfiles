#!/usr/bin/env ruby

require 'rack'
require 'json'
require 'pry'

module TerminalColors
  def purple(text)
    "\e[35m#{text}\e[0m"
  end

  def cyan(text)
    "\e[36m#{text}\e[0m"
  end

  def grey(text)
    "\e[90m#{text}\e[0m"
  end

  def yellow(text)
    "\e[33m#{text}\e[0m"
  end
end

class WebhookServer
  include TerminalColors

  def self.call(env)
    new(env).process
  rescue => exception
    binding.pry
  end

  def initialize(env)
    @request  = Rack::Request.new(env)
    @response = Rack::Response.new
  end

  def process
    print_delimiter
    puts
    print_request
    puts

    if from_webhook?
      print_headers
      puts
      print_body

      response.status = 204
      response['Content-Type'] = 'application/json'
    else
      response.status = 200
      response['Content-Type'] = 'text/html'
      response.write(html)
    end

    puts
    print_delimiter
    puts "\n\n"

    response.finish
  end

  private

  attr_reader :request, :response

  def print_delimiter
    puts grey('*' * 80)
  end

  def print_request
    method    = request.env.fetch('REQUEST_METHOD')
    uri       = request.env.fetch('REQUEST_URI')
    ip        = request.env.fetch('REMOTE_ADDR')

    puts yellow(Time.now)
    puts yellow("#{ip} - #{method} #{uri}")
  end

  def print_headers
    parsed_request_headers.each do |key, value|
      name = humanize(key)

      case name
      when 'Version'
        puts purple(value).strip
      else
        puts purple("#{name}: #{value}").strip
      end
    end
  end

  def print_body
    formatted_json = JSON.pretty_generate(parsed_request_body)
    puts cyan(formatted_json)
  end

  def parsed_request_headers
    request.env.each_with_object({}) do |(key, value), hash|
      if key.start_with?('HTTP_')
        hash[key.gsub('HTTP_', '')] = value
      end
    end
  end

  def parsed_request_body
    JSON.parse(request_body)
  end

  def html
    <<-HTML
    <html>
    <div style="text-align:center;margin-top:100px;">
      <p style="font-size:50px;">ðŸ‘‹</p>
      <a style="font-size:12px;" href="https://git.io/v1WXJ">[source]</a>
      </div>
    </html>
    HTML
  end

  def from_webhook?
    !request_body.empty?
  end

  def request_body
    @request_body ||= request.body.read
  end

  def humanize(string)
    pieces = string.split(/_|-/)
    pieces.map { |piece| piece.capitalize }.join('-')
  end
end

Process.spawn('ssh -nNT -R 80:localhost:9292 root@brooks.sh')
Rack::Server.start(app: WebhookServer)

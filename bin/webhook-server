#!/usr/bin/env ruby

require 'pry'
require 'json'
require 'sinatra'

[:get, :post, :put, :patch, :delete].each do |method|
  send(method, '*') do
    begin
      body = request.body.read

      if body.empty?
        status 200
        '<html><p style="font-size:50px;text-align:center;margin-top:100px;">👋🏼</p></html>'
      else
        status 204

        parsed_headers = request.env.each_with_object({}) do |(key, value), hash|
          if key.start_with?('HTTP_')
            hash[key.gsub('HTTP_', '')] = value
          end
        end

        parsed_json = JSON.pretty_generate(JSON.parse(body))

        parsed_headers.each do |key, value|
          name = humanize(key)

          case name
          when 'Version'
            puts purple(value).strip
          else
            puts purple("#{name}: #{value}").strip
          end
        end

        puts "#{cyan(parsed_json)}\n\n"
      end
    rescue => exception
      binding.pry
    end
  end
end

def humanize(string)
  pieces = string.split(/_|-/)
  pieces.map { |piece| piece.capitalize }.join('-')
end

def purple(text)
  "\n\e[35m#{text}\e[0m"
end

def cyan(text)
  "\n\e[36m#{text}\e[0m"
end

"
" Vim settings for @bswinnerton
"

" Settings in this file may depend on plugins, so let's install them first.
" Not to be confused with the contents of ~/.vim/plugin/* which are
" configuration options for each plugin and automatically loaded by Vim.
source ~/.vim/plugin/plugins.vim

"-------------------------------------------------------------------------------
" Basics
"-------------------------------------------------------------------------------

syntax on

let mapleader=','               " Leader - override the default \

set autoread                    " Auto reload changed files
set wildmenu                    " Tab autocomplete in command mode
set backspace=indent,eol,start  " http://vi.stackexchange.com/a/2163
set clipboard=unnamed           " Clipboard support (OSX)
set laststatus=2                " Show status line on startup
set splitright                  " Open new splits to the right
set splitbelow                  " Open new splits to the bottom
set lazyredraw                  " Reduce the redraw frequency when scrolling
set ttyfast                     " Send more characters for redraw
set nowrap                      " Don't wrap long lines
set listchars=extends:·         " Show dot when line continues to the right
set listchars+=precedes:·       " Show dot when line continues to the left

" Turn off backups
set nobackup
set nowritebackup
set noswapfile

" I don't want no shame bell
set noerrorbells
set novisualbell

" Two space tabs
set expandtab
set shiftwidth=2
set tabstop=2

" Search
set hlsearch
set smartcase
set incsearch
set ignorecase
" Use the space bar to unhighlight search results
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR><Esc>:let @/=''

" Enable mouse support for all modes
if has('mouse')
  set mouse=a
endif

" Ignored files/directories from autocomplete (and CtrlP)
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/vendor/bundle/*,*/public/test/*,*/node_modules/


"-------------------------------------------------------------------------------
" Interface
"-------------------------------------------------------------------------------

set number            " Enable line numbers
set cursorline        " Horizontal crosshair
set cursorcolumn      " Vertical crosshair
set scrolloff=5       " Leave 5 lines of buffer when scrolling
set sidescrolloff=10  " Leave 10 characters of horizontal buffer when scrolling

" Sets background for 81st column onward
if exists('+colorcolumn')
  let &colorcolumn=join(range(81,999),",")
endif

" Add newline after 80 characters when in a markdown file
au BufRead,BufNewFile *.md setlocal textwidth=80

" Hide horizontal cursor when focus changes
augroup CursorLine
    au!
    au VimEnter * setlocal cursorline
    au WinEnter * setlocal cursorline
    au BufWinEnter * setlocal cursorline
    au WinLeave * setlocal nocursorline
augroup END

" Hide vertical cursor when focus changes
augroup CursorColumn
    au!
    au VimEnter * setlocal cursorcolumn
    au WinEnter * setlocal cursorcolumn
    au BufWinEnter * setlocal cursorcolumn
    au WinLeave * setlocal nocursorcolumn
augroup END


"-------------------------------------------------------------------------------
" Colors
"-------------------------------------------------------------------------------

set background=dark
colorscheme base16-ocean
let base16colorspace=256


"-------------------------------------------------------------------------------
" Custom Movement
"-------------------------------------------------------------------------------

" Don't deselect visual block after indent/unindent
vnoremap < <gv
vnoremap > >gv

" Shortcut for <CTRL> + hjkl to traverse panes
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Bash like keys for the Vim command line
cnoremap <C-A> <Home>
cnoremap <C-E> <End>
cnoremap <C-K> <C-U>

" Remap j and k to act as expected when used on long, wrapped, lines
nnoremap j gj
nnoremap k gk


"-------------------------------------------------------------------------------
" Neovim support
"-------------------------------------------------------------------------------

if has('nvim')
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1

  " https://github.com/neovim/neovim/issues/2048
  nmap <BS> <C-W>h
endif
